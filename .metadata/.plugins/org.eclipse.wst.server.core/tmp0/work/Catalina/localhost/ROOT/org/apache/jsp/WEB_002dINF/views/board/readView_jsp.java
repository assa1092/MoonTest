/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2020-12-21 08:00:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class readView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/C:/Users/ACE/sts-workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/testBoard/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/Users/ACE/sts-workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/testBoard/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/Users/ACE/sts-workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/testBoard/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1607928434231L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"root\">\r\n");
      out.write("\t\t<header>\r\n");
      out.write("\t\t\t<h1>게시판</h1>\r\n");
      out.write("\t\t</header>\r\n");
      out.write("\t\t<hr />\r\n");
      out.write("\r\n");
      out.write("\t\t<nav>홈 - 글 작성</nav>\r\n");
      out.write("\t\t<hr />\r\n");
      out.write("\r\n");
      out.write("\t\t<section id=\"container\" class=\"container\">\r\n");
      out.write("\t\t\t<form role=\"form\" method=\"post\">\r\n");
      out.write("\t\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<label for=\"bno\">번 호 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${read.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</label> \r\n");
      out.write("\t\t\t\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<label for=\"regdate\" style=\"text-align : right\" >작성일자 : </label> \r\n");
      out.write("\t\t\t\t\t\t");
      if (_jspx_meth_fmt_005fformatDate_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<label for=\"title\">제목</label>\r\n");
      out.write("\t\t\t\t\t<!-- for=\"title\" 제목 클릭시 name=\"title\"으로 포커스 가게... -->\r\n");
      out.write("\t\t\t\t\t<input name=\"title\" id=\"title\" class=\"form-control\" readonly  value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${read.title }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t\t\t\t\t<!-- input 태그가 한줄로 모서리 둥글게...class=\"form-control\" -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<label for=\"writer\">작성자</label> \r\n");
      out.write("\t\t\t\t\t\t<input name=\"writer\" id=\"writer\" class=\"form-control\" readonly  value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${read.writer }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<label for=\"content\">내용</label>\r\n");
      out.write("\t\t\t\t\t<textarea rows=\"5\" name=\"content\" id=\"content\" readonly  class=\"form-control\" > ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${read.content }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"form-group\" align=\"right\">\r\n");
      out.write("\t\t\t\t\t<button id=\"replyBtn\" class=\"btn btn-danger\">댓 글</button>\r\n");
      out.write("\t\t\t\t\t<button id=\"updateBtn\" class=\"btn btn-info\">수 정</button>\r\n");
      out.write("\t\t\t\t\t<button id =\"deleteBtn\" class=\"btn btn-warning\" >삭 제</button>\r\n");
      out.write("\t\t\t\t\t<button id =\"listBtn\" class=\"btn btn-primary\" >목 록</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<!-- 댓글버튼 누르면 댓글 작성화면 나오게...collagse toggle  -->\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t<div id=\"myCollapse\" class=\"collapse\">\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"replyer\">작성자</label>\r\n");
      out.write("\t\t\t\t\t\t<input id=\"replyer\" class=\"form-control\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"replytext\">내 용</label>\r\n");
      out.write("\t\t\t\t\t\t<input id=\"replytext\" class=\"form-control\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\"  style=\"text-align : right\" >\r\n");
      out.write("\t\t\t\t\t\t<button id=\"replyInsertBtn\" class=\"btn btn-primary\">댓글 등록</button>\r\n");
      out.write("\t\t\t\t\t</div>\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t<!-- 덮어쓰기 할꺼라 없는거나 마찬가지 -->\r\n");
      out.write("\t\t<div id=\"replies\" class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"panel panel-success\">\r\n");
      out.write("\t\t\t\t<div class=\"panel-heading\">\r\n");
      out.write("\t\t\t\t\t<span>rno: 3 </span>, <span>작성자 : 홍길동</span>\r\n");
      out.write("\t\t\t\t\t<!-- class=\"pull-right\" 오른쪽으로 붙게... -->\r\n");
      out.write("\t\t\t\t\t<span class=\"pull-right\">2020년07월07일...</span>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"panel-body\">\r\n");
      out.write("\t\t\t\t\t<p>댓글 내용입니다</p>\r\n");
      out.write("\t\t\t\t\t<button data-name=\"홍길동\" data-rno=\"3\" class=\"btn btn-warning btn-xs replymodify\">수정</button>\r\n");
      out.write("\t\t\t\t\t<button data-rno=\"3\" class=\"btn btn-danger btn-xs replydelete\">삭제</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div><!-- class = row -->\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t<div data-backdrop=\"static\" id=\"myModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\r\n");
      out.write("\t\t\t<div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("\t\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t<h4 class=\"modal-rno\">rno 데이터</h4>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t\t<p class=\"modal-replyer\">홍길동</p>\r\n");
      out.write("\t\t\t\t\t\t<input value=\"댓글내용입니다\" class=\"form-control modal-replytext\"/>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-warning modal-update-btn\" \r\n");
      out.write("\t\t\t\t\t\t\t\tdata-dismiss=\"modal\">댓글수정</button>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div><!-- /.modal-content -->\r\n");
      out.write("\t\t\t</div><!-- /.modal-dialog -->\r\n");
      out.write("\t\t</div><!-- /.modal -->\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</section>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\t// script안에서...var 를 안붙이면 전역변수로 사용할수있다...\r\n");
      out.write("\tvar bno = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${read.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\t\r\n");
      out.write("\t\r\n");
      out.write("\t// 글 자세히 보기로 들어오면 원글에 달린 댓글 가져온다..\r\n");
      out.write("\tgetList(bno);\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\t// 게시글 수정\r\n");
      out.write("\t\t$(\"#updateBtn\").click(function(){\r\n");
      out.write("\t\t\tlocation.assign(\"/board/updateView/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${read.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\");\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t// 게시글 삭제\r\n");
      out.write("\t\t$(\"#deleteBtn\").click(function(){\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar result = confirm('삭제하시겠습니까'); \r\n");
      out.write("\t\t\tif(result) { \r\n");
      out.write("\t\t\t\tlocation.assign(\"/board/delete/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${read.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\");\r\n");
      out.write("\t\t\t} else { }\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t// 목록으로\r\n");
      out.write("\t\t$(\"#listBtn\").click(function(){\r\n");
      out.write("\t\t\tlocation.assign(\"/board/list\");\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t// 댓글 수정버튼 클릭시 모달창 띄우기\r\n");
      out.write("\t\t$(\"#replies\").on(\"click\", \".replymodify\", function(){\r\n");
      out.write("\t\t\t// $(this) 지금 클릭한 요소...\r\n");
      out.write("\t\t\t// 그 요소의 속성...$(this).attr(\"data-rno\");\r\n");
      out.write("\t\t\t// 그 값을 변수로 받아서 쓴다.\r\n");
      out.write("\t\t\tvar rno = $(this).attr(\"data-rno\");\r\n");
      out.write("\t\t\tvar replyer = $(this).attr(\"data-name\")\r\n");
      out.write("\t\t\tvar replytext = $(this).prev().text();\t\r\n");
      out.write("\t\t\t//  $(this).prev()내가 방금 누른곳의 바로 앞 태그...<p>\r\n");
      out.write("\t\t\t//  그 태그의 내용 $(this).prev().text();\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\".modal-rno\").text(rno);\r\n");
      out.write("\t\t\t$(\".modal-replyer\").text(replyer);\r\n");
      out.write("\t\t\t// <input> 태그라 .val();\r\n");
      out.write("\t\t\t$(\".modal-replytext\").val(replytext);\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 댓글 수정 누르면 모달 창 보이게.\r\n");
      out.write("\t\t\t$(\"#myModal\").modal(\"show\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t// 댓글 버튼 클릭시 작성폼 토글\r\n");
      out.write("\t\t$(\"#replyBtn\").click(function(){\r\n");
      out.write("\t\t\t$(\"#myCollapse\").collapse(\"toggle\");\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t// 댓글 작성 버튼 클릭시\r\n");
      out.write("\t\t$(\"#replyInsertBtn\").click(function(){\r\n");
      out.write("\t\t\tvar replyer = $(\"#replyer\").val();\r\n");
      out.write("\t\t\tvar replytext = $(\"#replytext\").val();\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype : 'post',\r\n");
      out.write("\t\t\t\turl : '/replies',\r\n");
      out.write("\t\t\t\theaders : {\r\n");
      out.write("\t\t\t\t\t'Content-Type' : 'application/json',\r\n");
      out.write("\t\t\t\t\t'X-HTTP-Method-Override' : 'POST'\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tdataType : 'text',\r\n");
      out.write("\t\t\t\tdata : JSON.stringify({\r\n");
      out.write("\t\t\t\t\tbno : bno,\r\n");
      out.write("\t\t\t\t\treplyer : replyer,\r\n");
      out.write("\t\t\t\t\treplytext : replytext\r\n");
      out.write("\t\t\t\t}),\r\n");
      out.write("\t\t\t\tsuccess : function(result){\r\n");
      out.write("\t\t\t\t\tconsole.log(result);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t// 댓글 등록 성공시 작성자, 내용 빈칸으로\r\n");
      out.write("\t\t\t\t\t$(\"#replyer\").val(\"\");\r\n");
      out.write("\t\t\t\t\t$(\"#replytext\").val(\"\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t// 댓글 리스트 새로 가져오기\r\n");
      out.write("\t\t\t\t\tgetList(bno);\t\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function(request, status, error){\r\n");
      out.write("\t\t\t\t\tconsole.log(error);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t// 댓글 리스트 가져오기\r\n");
      out.write("\tfunction getList(bno){\r\n");
      out.write("\t\tvar str = '';\r\n");
      out.write("\t\t// JSON 파일 읽어올때...getJSON(1, 2)\r\n");
      out.write("\t\t// 1. 어디로, 2.성공했을때 하는일\r\n");
      out.write("\t\t$.getJSON(\"/replies/all/\"+ bno, function(data){\r\n");
      out.write("\t\t\t// 댓글이 여러개 달릴경우 같아져 버리기 때문에..\r\n");
      out.write("\t\t\t// id 로 지정할 수가 없다...\r\n");
      out.write("\t\t\t// 그래서 클래스명으로 접근한다...\r\n");
      out.write("\t\t\tfor(var i=0 ; i < data.length ; i++){\r\n");
      out.write("\t\t\t\tstr += '<div class=\"panel panel-success\"><div class=\"panel-heading\"><span>rno: '+ data[i][\"rno\"] +' </span>, <span>작성자 : '+ data[i][\"replyer\"]+'</span><span class=\"pull-right\">'+ data[i][\"updatedate\"] +'</span></div><div class=\"panel-body\"><p>'+ data[i][\"replytext\"]+'</p><button data-name = \"'+data[i][\"replyer\"]+'\" data-rno=\"'+data[i][\"rno\"]+'\"  class=\"btn btn-warning btn-xs replymodify\">수정</button><button data-rno=\"'+data[i][\"rno\"]+'\"  class=\"btn btn-danger btn-xs replydelete\">삭제</button></div></div>'; \r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t$(\"#replies\").html(str);\t\r\n");
      out.write("\t\t\t// id가 replies의 html을 str으로 덮어씌우기...\r\n");
      out.write("\t\t\t// 추가하고 싶으면 .append()\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fformatDate_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatDate
    org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag _jspx_th_fmt_005fformatDate_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag) _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag.class);
    boolean _jspx_th_fmt_005fformatDate_005f0_reused = false;
    try {
      _jspx_th_fmt_005fformatDate_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatDate_005f0.setParent(null);
      // /WEB-INF/views/board/readView.jsp(69,6) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setValue((java.util.Date) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${read.regdate}", java.util.Date.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/views/board/readView.jsp(69,6) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setPattern("yyyy-MM-dd");
      int _jspx_eval_fmt_005fformatDate_005f0 = _jspx_th_fmt_005fformatDate_005f0.doStartTag();
      if (_jspx_th_fmt_005fformatDate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatDate_005f0);
      _jspx_th_fmt_005fformatDate_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatDate_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatDate_005f0_reused);
    }
    return false;
  }
}
